start : program 	<Line: 1-7>
 program : program unit 	<Line: 1-7>
  program : program unit 	<Line: 1-3>
   program : unit 	<Line: 1-1>
    unit : func_declaration 	<Line: 1-1>
     func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON 	<Line: 1-1>
      type_specifier : INT 	<Line: 1-1>
       INT : int 	<Line: 1>
      ID : f 	<Line: 1>
      LPAREN : ( 	<Line: 1>
      parameter_list : parameter_list COMMA type_specifier ID 	<Line: 1-1>
       parameter_list  : type_specifier ID 	<Line: 1-1>
        type_specifier : INT 	<Line: 1-1>
         INT : int 	<Line: 1>
        ID : a 	<Line: 1>
       COMMA : , 	<Line: 1>
       type_specifier : FLOAT 	<Line: 1-1>
        FLOAT : float 	<Line: 1>
       ID : b 	<Line: 1>
      RPAREN : ) 	<Line: 1>
      SEMICOLON : ; 	<Line: 1>
   unit : func_declaration 	<Line: 3-3>
    func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON 	<Line: 3-3>
     type_specifier : INT 	<Line: 3-3>
      INT : int 	<Line: 3>
     ID : f 	<Line: 3>
     LPAREN : ( 	<Line: 3>
     parameter_list : parameter_list COMMA type_specifier ID 	<Line: 3-3>
      parameter_list  : type_specifier ID 	<Line: 3-3>
       type_specifier : FLOAT 	<Line: 3-3>
        FLOAT : float 	<Line: 3>
       ID : a 	<Line: 3>
      COMMA : , 	<Line: 3>
      type_specifier : INT 	<Line: 3-3>
       INT : int 	<Line: 3>
      ID : a 	<Line: 3>
     RPAREN : ) 	<Line: 3>
     SEMICOLON : ; 	<Line: 3>
  unit : func_definition 	<Line: 5-7>
   func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement  	<Line: 5-7>
    type_specifier : INT 	<Line: 5-5>
     INT : int 	<Line: 5>
    ID : f 	<Line: 5>
    LPAREN : ( 	<Line: 5>
    parameter_list : parameter_list COMMA type_specifier ID 	<Line: 5-5>
     parameter_list  : type_specifier ID 	<Line: 5-5>
      type_specifier : INT 	<Line: 5-5>
       INT : int 	<Line: 5>
      ID : a 	<Line: 5>
     COMMA : , 	<Line: 5>
     type_specifier : INT 	<Line: 5-5>
      INT : int 	<Line: 5>
     ID : b 	<Line: 5>
    RPAREN : ) 	<Line: 5>
    compound_statement : LCURL RCURL 	<Line: 5-7>
     LCURL : { 	<Line: 5>
     RCURL : } 	<Line: 7>
