start : program 	<Line: 1-6>
 program : program unit 	<Line: 1-6>
  program : unit 	<Line: 1-1>
   unit : var_declaration 	<Line: 1-1>
    var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 1-1>
     type_specifier : INT 	<Line: 1-1>
      INT : int 	<Line: 1-1>
     declaration_list : ID 	<Line: 1-1>
      ID : g 	<Line: 1-1>
     SEMICOLON : ; 	<Line: 1-1>
  unit : func_definition 	<Line: 2-6>
   func_definition : type_specifier ID LPAREN RPAREN compound_statement  	<Line: 2-6>
    type_specifier : INT 	<Line: 2-2>
     INT : int 	<Line: 2-2>
    ID : main 	<Line: 2-6>
    LPAREN : ( 	<Line: 2-6>
    RPAREN : ) 	<Line: 2-6>
    compound_statement : LCURL statements RCURL 	<Line: 2-6>
     LCURL : { 	<Line: 2-6>
     statements : statements statement 	<Line: 3-4>
      statements : statement 	<Line: 3-3>
       statement : var_declaration 	<Line: 3-3>
        var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 3-3>
         type_specifier : INT 	<Line: 3-3>
          INT : int 	<Line: 3-3>
         declaration_list : ID LSQUARE CONST_INT RSQUARE 	<Line: 3-3>
          ID : a 	<Line: 3-3>
          LSQUARE : [ 	<Line: 3-3>
          CONST_INT : 6 	<Line: 3-3>
          RSQUARE : ] 	<Line: 3-3>
         SEMICOLON : ; 	<Line: 3-3>
      statement : expression_statement 	<Line: 4-4>
       expression_statement : expression SEMICOLON 	<Line: 4-4>
        expression : variable ASSIGNOP logic_expression 	<Line: 4-4>
         variable : ID LSQUARE expression RSQUARE 	<Line: 4-4>
          ID : a 	<Line: 4-4>
          LSQUARE : [ 	<Line: 4-4>
          expression : logic_expression 	<Line: 4-4>
           logic_expression : rel_expression 	<Line: 4-4>
            rel_expression : simple_expression 	<Line: 4-4>
             simple_expression : term 	<Line: 4-4>
              term : unary_expression 	<Line: 4-4>
               unary_expression : factor 	<Line: 4-4>
                factor : CONST_INT 	<Line: 4-4>
                 CONST_INT : 3 	<Line: 4-4>
          RSQUARE : ] 	<Line: 4-4>
         ASSIGNOP : = 	<Line: 4-4>
         logic_expression : rel_expression 	<Line: 4-4>
          rel_expression : simple_expression 	<Line: 4-4>
           simple_expression : term 	<Line: 4-4>
            term : unary_expression 	<Line: 4-4>
             unary_expression : factor 	<Line: 4-4>
              factor : CONST_INT 	<Line: 4-4>
               CONST_INT : 1 	<Line: 4-4>
        SEMICOLON : ; 	<Line: 4-4>
     RCURL : } 	<Line: 6-6>
